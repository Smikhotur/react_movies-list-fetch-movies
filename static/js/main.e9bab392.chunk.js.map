{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Plot","Poster","imdbID","className","src","alt","href","MoviesList","movies","map","movie","key","getMovie","film","url","fetch","options","then","response","ok","Error","status","statusText","json","FindMovie","addNewMovie","useState","value","setValue","setMovie","onFindMovie","a","result","htmlFor","type","id","placeholder","onChange","target","onClick","App","data","setMovies","prevMovie","every","item","findId","ReactDOM","render","document","getElementById"],"mappings":"8uEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,YAFuB,MAEhB,GAFgB,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMR,QAAYQ,S,uBCA3BE,G,MAAW,SAAAC,GAAI,OATXC,EASuBD,EATNE,MAAM,GAAD,OAFtB,+CAEsB,OAAeD,GAAOE,GAC1DC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UANJ,IAACT,EAAKE,ICKTQ,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAClBC,mBAAS,IADS,mBACrCC,EADqC,KAC9BC,EAD8B,OAElBF,mBAAS,IAFS,mBAErChB,EAFqC,KAE9BmB,EAF8B,KAItCC,EAAW,uCAAG,4BAAAC,EAAA,sEACGnB,EAASe,GADZ,OACZK,EADY,OAGlBH,EAASG,GAHS,2CAAH,qDAYjB,OACE,oCACE,0BAAM7B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ8B,QAAQ,eAAjC,eAIA,yBAAK9B,UAAU,WACb,2BACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAU,kBACVwB,MAAOA,EACPU,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXV,EAASU,EAAOX,YAMxB,yBAAKxB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE+B,KAAK,SACL/B,UAAU,kBACVoC,QAAST,GAHX,iBASF,yBAAK3B,UAAU,WACb,4BACE+B,KAAK,SACL/B,UAAU,oBACVoC,QA3CO,WACjBd,EAAYf,GACZkB,EAAS,IACTC,EAAS,MAqCD,sBAWK,KAAVnB,GAAgBA,EAAMU,MACrB,uBAAGjB,UAAU,kBACVO,EAAMU,MACH,uCACA,IAIN,yBAAKjB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,M,OCxEZ8B,EAAM,WAAO,IAAD,EACKd,mBAASe,GADd,mBAChBjC,EADgB,KACRkC,EADQ,KAgBvB,OACE,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWsB,YAhBG,SAACf,GACnBgC,GAAU,SAACC,GACT,OALW,SAACA,EAAWjC,GAAZ,OAAsBiC,EAClCC,OAAM,SAAAC,GAAI,OAAIA,EAAK3C,SAAWQ,EAAMR,WAAWQ,EAAMR,OAIhD4C,CAAOH,EAAWjC,GACd,GAAN,mBAAWiC,GAAX,CAAsBjC,IAGjBiC,WCbbI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e9bab392.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Plot = '',\n  Poster,\n  imdbID,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Plot: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=317c681f&t=';\n\nconst request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getMovie = film => request(film);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n\n  const onFindMovie = async() => {\n    const result = await getMovie(value);\n\n    setMovie(result);\n  };\n\n  const onAddMovie = () => {\n    addNewMovie(movie);\n    setValue('');\n    setMovie('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={value}\n              onChange={({ target }) => {\n                setValue(target.value);\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {movie === '' || movie.Error ? (\n        <p className=\"help is-danger\">\n          {movie.Error\n            ? 'Can\\'t find a movie with such a title'\n            : ''\n          }\n        </p>\n      ) : (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const findId = (prevMovie, movie) => prevMovie\n    .every(item => item.imdbID !== movie.imdbID) && movie.imdbID;\n\n  const addNewMovie = (movie) => {\n    setMovies((prevMovie) => {\n      if (findId(prevMovie, movie)) {\n        return [...prevMovie, movie];\n      }\n\n      return prevMovie;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}